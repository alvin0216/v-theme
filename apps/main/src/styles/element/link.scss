@import 'mixins/mixins';
@import 'common/var';
@import './theme/mixins.scss';

$typeMap: (
  primary: $--link-primary-font-color,
  danger: $--link-danger-font-color,
  success: $--link-success-font-color,
  warning: $--link-warning-font-color,
  info: $--link-info-font-color,
);

@include b(link) {
  display: inline-flex;
  flex-direction: row;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  position: relative;
  text-decoration: none;
  outline: none;
  cursor: pointer;
  padding: 0;
  font-size: $--link-font-size;
  font-weight: $--link-font-weight;

  @include when(underline) {
    &:hover:after {
      content: '';
      position: absolute;
      left: 0;
      right: 0;
      height: 0;
      bottom: 0;
      border-bottom: 1px solid var(--color-primary);
    }
  }

  @include when(disabled) {
    cursor: not-allowed;
  }

  & [class*='el-icon-'] {
    & + span {
      margin-left: 5px;
    }
  }

  &.el-link--default {
    color: var(--text-regular);
    &:hover {
      color: var(--color-primary);
    }
    &:after {
      border-color: var(--color-primary);
    }
    @include when(disabled) {
      color: var(--text-placeholder);
    }
  }
}

.el-link {
  @each $v in primary success warning danger info {
    &.el-link--#{$v} {
      @include apply-themes() using ($theme) {
        $color: get-theme-var($theme, $colors, color-#{$v});
        $mix-color: if($theme == light, $--color-white, $--color-dark);
        color: $color;
        &:hover {
          color: mix($color, $mix-color, 80%);
        }
        &:after {
          border-color: $color;
        }
        @include when(disabled) {
          color: mix($color, $mix-color, 50%);
        }
        @include when(underline) {
          &:hover:after {
            border-color: $color;
          }
        }
      }
    }
  }
}
