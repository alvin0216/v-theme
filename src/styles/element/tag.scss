@import 'mixins/mixins';
@import 'common/var';
@import '../theme/mixin.scss';

@mixin genTheme($backgroundColorWeight, $borderColorWeight, $fontColorWeight, $hoverColorWeight, $mix) {
  $mix-color: map-get($mix, mix-color);
  $primary: map-get($mix, color, primary);
  $info: map-get($mix, color, info);
  $success: map-get($mix, color, success);
  $warning: map-get($mix, color, warning);
  $danger: map-get($mix, color, danger);

  background-color: mix($primary, $mix-color, $backgroundColorWeight);
  border-color: mix($primary, $mix-color, $borderColorWeight);
  color: mix($primary, #fff, $fontColorWeight);

  @include when(hit) {
    border-color: $primary;
  }

  .el-tag__close {
    color: mix($primary, #fff, $fontColorWeight);
    &:hover {
      color: $--color-white;
      background-color: mix($primary, $mix-color, $hoverColorWeight);
    }
  }

  &.el-tag--info {
    background-color: mix($info, $mix-color, $backgroundColorWeight);
    border-color: mix($info, $mix-color, $borderColorWeight);
    color: mix($info, $--color-white, $fontColorWeight);

    @include when(hit) {
      border-color: $info;
    }

    .el-tag__close {
      color: mix($info, #fff, $fontColorWeight);
      &:hover {
        color: $--color-white;
        background-color: mix($info, $--color-white, $hoverColorWeight);
      }
    }
  }

  &.el-tag--success {
    background-color: mix($success, $mix-color, $backgroundColorWeight);
    border-color: mix($success, $mix-color, $borderColorWeight);
    color: mix($success, #fff, $fontColorWeight);

    @include when(hit) {
      border-color: $success;
    }

    .el-tag__close {
      color: mix($success, #fff, $fontColorWeight);
      &:hover {
        color: $--color-white;
        background-color: mix($success, $mix-color, $hoverColorWeight);
      }
    }
  }

  &.el-tag--warning {
    background-color: mix($warning, $mix-color, $backgroundColorWeight);
    border-color: mix($warning, $mix-color, $borderColorWeight);
    color: mix($warning, $--color-white, $fontColorWeight);

    @include when(hit) {
      border-color: $warning;
    }

    .el-tag__close {
      color: mix($warning, $--color-white, $fontColorWeight);
      &:hover {
        color: $--color-white;
        background-color: mix($warning, $mix-color, $hoverColorWeight);
      }
    }
  }

  &.el-tag--danger {
    background-color: mix($danger, $mix-color, $backgroundColorWeight);
    border-color: mix($danger, $mix-color, $borderColorWeight);
    color: mix($danger, $--color-white, $fontColorWeight);

    @include when(hit) {
      border-color: $danger;
    }

    .el-tag__close {
      color: mix($danger, $--color-white, $fontColorWeight);
      &:hover {
        color: $--color-white;
        background-color: mix($danger, $mix-color, $hoverColorWeight);
      }
    }
  }
}

@include b(tag) {
  @include apply-theme() using ($mix) {
    @include genTheme(10%, 20%, 100%, 100%, $mix);
  }

  display: inline-block;
  height: 32px;
  padding: $--tag-padding;
  line-height: 30px;
  font-size: $--tag-font-size;
  color: var(--color-primary);
  border-width: 1px;
  border-style: solid;
  border-radius: $--tag-border-radius;
  box-sizing: border-box;
  white-space: nowrap;

  .el-icon-close {
    border-radius: 50%;
    text-align: center;
    position: relative;
    cursor: pointer;
    font-size: 12px;
    height: 16px;
    width: 16px;
    line-height: 16px;
    vertical-align: middle;
    top: -1px;
    right: -5px;

    &::before {
      display: block;
    }
  }

  @include apply-theme() using ($mix) {
    @if map-get($mix, theme) == light {
      @include m(dark) {
        @include genTheme(100%, 100%, 0%, 80%, $mix);
      }

      @include m(plain) {
        @include genTheme(0%, 40%, 100%, 100%, $mix);
      }
    } @else {
      @include m(dark) {
        @include genTheme(100%, 100%, 0%, 70%, $mix);
      }

      @include m(plain) {
        @include genTheme(0%, 50%, 100%, 100%, $mix);

        &,
        &.el-tag--info,
        &.el-tag--success,
        &.el-tag--warning,
        &.el-tag--danger {
          background-color: transparent;
        }
      }
    }
  }

  @include m(medium) {
    height: 28px;
    line-height: 26px;

    .el-icon-close {
      transform: scale(0.8);
    }
  }

  @include m(small) {
    height: 24px;
    padding: 0 8px;
    line-height: 22px;

    .el-icon-close {
      transform: scale(0.8);
    }
  }

  @include m(mini) {
    height: 20px;
    padding: 0 5px;
    line-height: 19px;

    .el-icon-close {
      margin-left: -3px;
      transform: scale(0.7);
    }
  }
}
